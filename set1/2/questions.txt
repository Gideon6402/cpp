1) In a declaration a variable is created and assigned a type. No location
is yet assigned to this variable. In a definition a memory location is
assigned to the variable and a value is added. 
   
2) A header file can contain functions, variables and objects that can
 be used in the program.
  
3) In the first stage, the precompiling stage it uses essentially copies 
the contents of the header files into the source code. These contains may 
contain references to libraries. During the compiling stage the source code 
is changed into machine code but this code still contains references to 
external libraries. During the linking phase machine code from the 
libraries are accesed and added to the program.

4) Both libraries and objects modules contain pre-compiled code. They are 
however still two different things. An object file is compiled source code. 
A library can be accesed by the linker if a reference is made to that 
specific library. The linker will than add pre-compiled code from the 
libary to the program.

5) The object file does contain machine code but still needs to be linked 
and made executable by the linker. During the linking process multiple 
object files can be combined and (if referenced) part of libraries are 
added too.
